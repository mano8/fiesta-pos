# Dockerfile.offline

# Start from pre-built fat image
FROM my-python-3.11-fat:latest

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    # Add the local user's bin directory to PATH
    PATH="/home/appuser/.local/bin:$PATH"

# Add the user to the dialout group
RUN usermod -aG dialout appuser

# Set working directory
WORKDIR /opt

# Create the app directories and set permissions
RUN mkdir -p hw_proxy
# Copy the hw_proxy source code
COPY --chown=appuser:appuser ./hw_proxy ./hw_proxy
RUN chown -R appuser:appuser ./hw_proxy

# Copy requirements and install them as the non-root user
COPY --chown=appuser:appuser ./hw_proxy/requirements-docker.txt .
COPY --chown=appuser:appuser ./wheelhouse ./wheelhouse
# Switch to the non-root user
USER appuser

# Install Python dependencies from local wheelhouse
# Use --no-cache-dir to avoid caching the packages in the image
# Use --user to install packages in the user's home directory
RUN pip install --no-index --no-cache-dir --user \
      --find-links=/wheelhouse \
      -r requirements-docker.txt


RUN dos2unix /opt/hw_proxy/scripts/docker_start.sh

# Ensure scripts have execution permission
RUN chmod +x /opt/hw_proxy/scripts/docker_start.sh

# Set the PYTHONPATH to ensure the hw_proxy module is found
ENV PYTHONPATH=/opt/hw_proxy

# Expose FastAPI port (use 8015)
EXPOSE 8015

# Use the entrypoint script as CMD, which will run migrations and then launch uvicorn
CMD ["/opt/hw_proxy/scripts/docker_start.sh"]